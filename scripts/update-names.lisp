(in-package :manifest-search)

(defun date-stamp (&optional (when (get-universal-time)))  
  (multiple-value-bind (sec min h d m y)
    (decode-universal-time when)
    (format nil "~4,'0d-~2,'0d-~2,'0d ~d:~2,'0d:~2,'0d" y m d h min sec)))

(defvar *doc*)
(defvar *i*)

(defun %fix-index-names ()
  (setf *i* 0)
  (munge-index
   (lambda (doc)
     (when (= 0 (mod *i* 100)) (format T "~%Progress<~A>:~A" (date-stamp) *i*))
     (incf *i*)
     (let ((new-fields
             (list (make-field :name (doc-value doc :name) nil)
                   (make-field :search-name (doc-value doc :name)))))
       (%delete-doc doc)
       (montezuma::remove-fields doc (%to-s :name))
       (iter (for field in new-fields)
         (montezuma:add-field doc field))
       (montezuma:add-document-to-index *cl-doc-index* doc)
       (montezuma:flush *cl-doc-index*)
       ))
   :include-packages? nil)
  (format T "~%Done<~A>:~A" (date-stamp) *i*))

(defun %fix-package-names ()
  (setf *i* 0)
  (labels ((update-doc-names (doc)           
             (let ((new-fields
                     (list
                      (make-field :id (cl-doc-key nil (doc-value doc :name) :package) nil)
                      (make-field :name (doc-value doc :name) nil)
                      (make-field :search-name (doc-value doc :name)))))
                                        ;(break "before: ~A ~%~A" doc (print-doc doc nil))
               (%delete-doc doc)
               (montezuma::remove-fields doc (%to-s :id))
               (montezuma::remove-fields doc (%to-s :name))
                                        ;(break "after name gone: ~A ~%~A" doc (print-doc doc nil))
               (iter (for field in new-fields)
                 (montezuma:add-field doc field))
               (montezuma:add-document-to-index *cl-doc-index* doc)
               (montezuma:flush *cl-doc-index*)
                                        ;(break "after: ~A ~%~A" doc (print-doc doc nil))
               ))
           (run-updates (doc)
             (setf *doc* doc )
             (when (= 0 (mod *i* 100)) (format T "~%Progress<~A>:~A" (date-stamp) *i*))
             (incf *i*)
             (update-doc-names doc)
             ))
    (iter (for doc in (docs-for-term :type :package))
      (run-updates doc)))
  (format T "~%Done<~A>:~A" (date-stamp) *i*))